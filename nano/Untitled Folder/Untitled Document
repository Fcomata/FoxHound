#include "Arreglo.h"
#include <iostream>
using namespace std;


Arreglo::Arreglo(int n){

	cantidad=0;
	altura=2;
	tamano=n;
	vector= new int[tamano];
	for(int i=0;i< tamano;i++){

		vector[i]=0;

this->cadena += "\n \\node (rectangle) at (";
this->cadena += i; 
this->cadena += ",";
this->cadena += altura;
this->cadena += ") [draw,thick,minimum width=2cm,minimum height=5mm] {0};";

   }
}

	Arreglo::~Arreglo(void){
		delete[] vector;
		
}



int Arreglo::eliminaElemento(){

this->cadena += "\n \\node (rectangle) at (";
this->cadena += cantidad; 
this->cadena += ",";
this->cadena += altura;
this->cadena += ") [draw,thick,minimum width=2cm,minimum height=5mm] {0};";

	vector[cantidad]=0;
	cantidad--;
	return (vector[cantidad]);

}

void Arreglo::eliminaElementoEnPosicion(int pos){

this->cadena += "\n \\node (rectangle) at (";
this->cadena += pos;
this->cadena += ",";
this->cadena += altura;
this->cadena += ") [draw,thick,minimum width=2cm,minimum height=5mm] {0};";

 
	vector[pos]=0;
	cantidad--;
	
}

void Arreglo::ingresarElemento(int elem){

this->cadena += "\n \\node (rectangle) at (";
this->cadena += cantidad;
this->cadena += ",";
this->cadena += altura;
this->cadena += ") [draw,thick,minimum width=2cm,minimum height=5mm] {";
this->cadena += elem;
this->cadena += "};";


		vector[cantidad]=elem;
		cantidad++;
}


void Arreglo::ingresarElementoEnPosicion(int elem,int pos){

  
  //cantidad vs tamaño***
	if (pos<cantidad){

this->cadena += "\n \\node (rectangle) at (";
this->cadena += pos;
this->cadena += ",";
this->cadena += altura;
this->cadena += ") [draw,thick,minimum width=2cm,minimum height=5mm] {";
this->cadena += elem; 
this->cadena += "};";//

		vector[pos]=elem;
		cantidad++;
	}
}

int Arreglo::sumaVector(){

	int acum=0;
		for(int i=0;i< tamano;i++){
		acum=vector[i]+acum;
   }

///********** ES MAS MAS O MENOS MENOS

altura++;altura++;
this->cadena += "\n \\node (rectangle) at (";
this->cadena += cantidad;
this->cadena += ",";
this->cadena += altura;
this->cadena += ") [draw,thick,minimum width=2cm,minimum height=5mm] {";
this->cadena += acum;
this->cadena += "};";
altura--;altura--;

		return acum;
}
void Arreglo::invierteVector(){

		int k,i, temp;

		for(i=0,k=cantidad-1;i<k;i++,k--){
			temp=vector[k];
			vector[k] = vector[i];
			vector[i]=temp;
		}

for(int a=0; a<cantidad-1; a++){

this->cadena += "\n \\node (rectangle) at (";
this->cadena += a;
this->cadena += ",";
this->cadena += altura;
this->cadena += ") [draw,thick,minimum width=2cm,minimum height=5mm] {";
this->cadena += vector[a]; 
this->cadena += "};";

}

}

	void Arreglo::imprimeVector(){
		for(int i=0;i< cantidad;i++){
		cout<<vector[i]<<endl;
   }
}
	int Arreglo::getCantidad(){
		return this->cantidad;
}
	int Arreglo:: obtenerObjeto(int n){
		if(n<cantidad)
			return vector[n];
	}
	void Arreglo::intercambiarElementos(int pos1,int pos2){
		int aux;
		if(pos1<cantidad && pos2<cantidad){
			aux=vector[pos1];
			vector[pos1]=vector[pos2];
			vector[pos2]=aux;


this->cadena += "\n \\node (rectangle) at (";
this->cadena += pos1;
this->cadena += ",";
this->cadena += altura;
this->cadena += ") [draw,thick,minimum width=2cm,minimum height=5mm] {";
this->cadena += vector[pos1]; 
this->cadena += "};";

this->cadena += "\n \\node (rectangle) at (";
this->cadena += pos2;
this->cadena += ",";
this->cadena += altura;
this->cadena += ") [draw,thick,minimum width=2cm,minimum height=5mm] {";
this->cadena += vector[pos2]; 
this->cadena += "};";

		}	
	}
	
 int Arreglo:: frecuencia(int elemento){
  int cont=0;
  for(int i=0;i<getCantidad();i++)
	  if(obtenerObjeto(i)==elemento)
			cont++;
	return cont;
 }

 int Arreglo::calculaModa() {
	int  posModa=0;
	int moda=0;
	for(int i=0;i<getCantidad()-1;i++)
		if(frecuencia(obtenerObjeto(i))>moda){
			posModa=i;
			moda=frecuencia(obtenerObjeto(i));
		}
	return obtenerObjeto(posModa);
}

void Arreglo:: llenarVector(int cantidad){
	int elemento=0;
	cout<<"Ingrese "<<cantidad<<" elementos"<<endl;
	for(int i=0;i<cantidad;i++){
			cin>>elemento;
			ingresarElemento(elemento);
		}


for(int a=0; a<cantidad-1; a++){

this->cadena += "\n \\node (rectangle) at (";
this->cadena += a;
this->cadena += ",";
this->cadena += altura;
this->cadena += ") [draw,thick,minimum width=2cm,minimum height=5mm] {";
this->cadena += vector[a]; 
this->cadena += "};";

}

}

 int Arreglo:: calculaPromedio() {
	 int  promedio=0;
	 int elemento=0;
	 for(int i=0;i<getCantidad();i++)
			promedio+=obtenerObjeto(i);
		return  promedio;
}

 int Arreglo::Max() {
  	 int  maximo;
	 int aux;
	 maximo=obtenerObjeto(0);
	 for(int i=0;i<getCantidad();i++){
		if(obtenerObjeto(i)>maximo){
			maximo=obtenerObjeto(i);
			aux=i;
		}
	}

this->cadena += "\n \\node (rectangle) at (";
this->cadena += aux;
this->cadena += ",";
this->cadena += altura;
this->cadena += ") [draw,thick,fill=red,minimum width=2cm,minimum height=5mm] {";
this->cadena += vector[aux]; 
this->cadena += "};";


	return maximo;
 }

 int Arreglo:: min() {
  	 int  minimo;
	 int aux;
	 minimo=obtenerObjeto(0);
	 for(int i=0;i<getCantidad()-1;i++){

		if(obtenerObjeto(i)<minimo){
			minimo=obtenerObjeto(i);
			aux=i;
		}
	}

this->cadena += "\n \\node (rectangle) at (";
this->cadena += aux;
this->cadena += ",";
this->cadena += altura;
this->cadena += ") [draw,thick,fill=green,minimum width=2cm,minimum height=5mm] {";
this->cadena += vector[aux]; 
this->cadena += "};";

	return minimo;
 }

 bool Arreglo:: buscarElemento(int elemento){
   
   //encuentra el primer elemento lineal
  for(int i=0;i<getCantidad()-1;i++)

	  if(obtenerObjeto(i)==elemento){

this->cadena += Latex(i,altura,vector[i]);	
this->cadena += "\n \\node (rectangle) at (";
this->cadena += i;
this->cadena += ",";
this->cadena += altura;
this->cadena += ") [draw,thick,fill=green,minimum width=2cm,minimum height=5mm] {";
this->cadena += vector[i]; 
this->cadena += "};";

	return true;

		}
  return false;
 }


void Arreglo:: ordenar(){
	int  posMinimo;
	for(int i=0;i<getCantidad();i++){
		posMinimo=i;
		for(int j=i;j<getCantidad();j++){
			if(obtenerObjeto(j)<obtenerObjeto(posMinimo))
				posMinimo=j;
		}
		intercambiarElementos(i,posMinimo);
	}
		
/*
    for(int a=0; a<tamaño; a++){
int aux=a;
this->cadena += "\n \\node (rectangle) at (";
//this->cadena += aux;
this->cadena += ",";
this->cadena += altura;
this->cadena += ") [draw,thick,minimum width=2cm,minimum height=5mm] {";
this->cadena += vector[aux]; 
this->cadena += "};";

   }*/

}

void Arreglo::limpiaVector(){
		for(int i=0;i< tamano;i++){
		vector[i]=0;
   }

		/*for(i=0; i<tamaño; i++){

this->cadena += "\n \\node (rectangle) at (";
//this->cadena += i;
this->cadena += ",";
this->cadena += altura;
this->cadena += ") [draw,thick,minimum width=2cm,minimum height=5mm] {0};";

  }*/

}

string Arreglo::getCadena(){
	cout<<"Los datos del arreglo son: "<<endl;
	return this->cadena;

}

string Arreglo::Latex(int posx, int posy, int valor){




this->cadena += "\n \\node (rectangle) at (";
this->cadena += posx;
this->cadena += ",";
this->cadena += posy;
this->cadena += ") [draw,thick,minimum width=2cm,minimum height=5mm] {";
this->cadena += valor; 
this->cadena += "};";




}
